// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         String   @id @default(uuid())
  username   String   @unique // Campo unico
  bio        String?
  name       String   @db.Text // Especifico do mysql: para campo que vai ter mais de de 90 caracteres
  email      String?  @unique
  avatar_url String?
  created_at DateTime @default(now())

  accounts     Account[]
  sessions     Session[]
  timeInterval UserTimeInterval[]
  Scheduling   Scheduling[]

  @@map("users") // Define o nome da tabela 
}

model Account {
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String? @db.Text // Especifico do mysql: para campo que vai ter mais de de 90 caracteres
  access_token        String? @db.Text // Especifico do mysql: para campo que vai ter mais de de 90 caracteres
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text // Especifico do mysql: para campo que vai ter mais de de 90 caracteres
  session_state       String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
  @@index([user_id])
  @@map("accounts") // Define o nome da tabela 
}

model Session {
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("sessions") // Define o nome da tabela 
}

model UserTimeInterval {
  id                    String @id @default(uuid())
  week_day              Int
  time_start_in_minutes Int
  time_end_in_minutes   Int

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  @@map("user_time_intervals") // Define o nome da tabela 
}

model Scheduling {
  id          String   @id @default(uuid())
  date        DateTime
  name        String
  email       String
  observation String?
  created_at  DateTime @default(now())

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  @@index([user_id])
  @@map("scheduling")
}
